{"version":3,"sources":["teacher.worker.js","components/generator/generator.jsx","components/app/app.jsx","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","Generator","useState","k","setK","qty","setQty","sd1","setSd1","sd2","setSd2","count","setCount","nu","setNu","b","setB","offset","setOffset","randomPoints","setRandomPoints","scaled","setScaled","teachOutput","setTeachOutput","teached","setTeached","teaching","setTeaching","teacher","setTeacher","firstClass","setFirstClass","secondClass","setSecondClass","file","setFile","isFile","setIsFile","weights01","setWeights01","weights02","setWeights02","weights2","setWeights2","tf","randomUniform","seed","useEffect","div","teacherWorker","resetWeights","generate","x","i","y","lineCoords","x1s","x2s","push","firstClassDotX","add","transpose","firstClassDotY","mul","firstClassTensor","secondClassDotX","secondClassDotY","sub","secondClassTensor","firstDots","arraySync","map","point","secondDots","input","output","predict","y6","straightRun","counter","array","forEach","pr","idx","Math","abs","ceil","floor","alert","shape","net4","net5","y4","sigmoid","y5","hiddenOutput","Card","style","marginBottom","padding","border","Row","Col","className","marginTop","userSelect","FormGroup","width","cursor","marginRight","onClick","CustomInput","type","id","checked","label","onChange","CardBody","height","margin","top","right","bottom","left","dataKey","strokeDasharray","data","fill","CardText","Button","color","disabled","a","async","console","log","teach","newWeights01","newWeights02","newWeights2","Form","form","md","Label","for","value","min","e","parsed","parseInt","isNaN","step","parseFloat","alignSelf","string","floored","blob","Blob","saveAs","Date","getTime","accept","target","files","TxtReader","sniffLines","then","res","text","result","points","class1","class2","line","arrayLine","split","replace","cl","length","sc","ones","print","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7792e0d4.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"teach\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"024b9e4a3409f802736e.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import React, { useEffect, useState } from 'react'\nimport {\n  Card,\n  CardText,\n  CardBody,\n  CustomInput,\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n} from 'reactstrap'\nimport * as tf from '@tensorflow/tfjs'\n// eslint-disable-next-line\nimport teacherWorker from 'workerize-loader!../../teacher.worker'\nimport InputNumber from 'rc-input-number'\nimport { TxtReader } from 'txt-reader'\nimport { saveAs } from 'file-saver'\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts'\n\nconst Generator = () => {\n  const [k, setK] = useState(1)\n  const [qty, setQty] = useState(10)\n  const [sd1, setSd1] = useState(0.2)\n  const [sd2, setSd2] = useState(0.3)\n  const [count, setCount] = useState(1000)\n  const [nu, setNu] = useState(0.5)\n  const [b, setB] = useState(0)\n  const [offset, setOffset] = useState(1)\n\n  const M = 0\n  const CLASS1 = 0.9\n  const CLASS2 = 0.1\n\n  const [randomPoints, setRandomPoints] = useState()\n  const [scaled, setScaled] = useState()\n  const [teachOutput, setTeachOutput] = useState()\n  const [teached, setTeached] = useState(false)\n  const [teaching, setTeaching] = useState(false)\n  const [teacher, setTeacher] = useState()\n  const [firstClass, setFirstClass] = useState()\n  const [secondClass, setSecondClass] = useState()\n  // const [line, setLine] = useState()\n\n  const [file, setFile] = useState()\n  const [isFile, setIsFile] = useState(false)\n\n  const [weights01, setWeights01] = useState()\n  const [weights02, setWeights02] = useState()\n  const [weights2, setWeights2] = useState()\n\n  tf.setBackend('cpu')\n  tf.initializers.randomUniform({ seed: 1 })\n\n  useEffect(() => {\n    randomPoints && setScaled(tf.scalar(1).div(randomPoints))\n    // eslint-disable-next-line\n  }, [randomPoints])\n\n  useEffect(() => {\n    setTeacher(teacherWorker())\n\n    resetWeights()\n\n    generate()\n    // eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    generate()\n    setTeached(false)\n    // eslint-disable-next-line\n  }, [qty, sd1, sd2, k, b, offset])\n\n  useEffect(() => {\n    resetWeights()\n    // eslint-disable-next-line\n  }, [k, b])\n\n  useEffect(() => {\n    if (isFile) {\n      setFirstClass([])\n      setSecondClass([])\n    } else {\n      resetWeights()\n      generate()\n    }\n    // eslint-disable-next-line\n  }, [isFile])\n\n  const generate = () => {\n    let x = i => 2 + i * 0.1\n    let y = x => k * x + b\n\n    let lineCoords = []\n    let x1s = []\n    let x2s = []\n\n    for (let i = 0; i < qty; i++) {\n      lineCoords.push({\n        x: x(i),\n        y: y(x(i)),\n      })\n\n      x1s.push(x(i))\n      x2s.push(y(x(i)))\n    }\n\n    let firstClassDotX = tf\n      .tensor([x1s])\n      .add(tf.randomNormal([qty], M, sd1))\n      .transpose()\n\n    let firstClassDotY = firstClassDotX\n      .mul(tf.scalar(k))\n      .add(tf.scalar(b))\n      .add(tf.scalar(offset))\n      .add(tf.randomNormal([qty, 1], M, sd2))\n\n    let firstClassTensor = tf.concat([firstClassDotX, firstClassDotY], 1)\n\n    let secondClassDotX = tf\n      .tensor([x1s])\n      .add(tf.randomNormal([qty], M, sd1))\n      .transpose()\n\n    let secondClassDotY = secondClassDotX\n      .mul(tf.scalar(k))\n      .add(tf.scalar(b))\n      .sub(tf.scalar(offset))\n      .add(tf.randomNormal([qty, 1], M, sd2))\n\n    let secondClassTensor = tf.concat([secondClassDotX, secondClassDotY], 1)\n\n    let firstDots = firstClassTensor\n      .arraySync()\n      .map(point => ({ x: point[0], y: point[1] }))\n\n    let secondDots = secondClassTensor\n      .arraySync()\n      .map(point => ({ x: point[0], y: point[1] }))\n\n    setFirstClass(firstDots)\n    setSecondClass(secondDots)\n\n    let input = tf.concat([firstClassTensor, secondClassTensor])\n\n    let output = tf.concat([\n      tf.fill([qty, 1], CLASS1),\n      tf.fill([qty, 1], CLASS2),\n    ])\n    setRandomPoints(input)\n    setTeachOutput(output)\n\n    // setLine(lineCoords)\n  }\n\n  const fetchWebWorker = async () => {\n    console.log('training...')\n    setTeaching(true)\n    setTeached(false)\n\n    const {\n      weights01: newWeights01,\n      weights02: newWeights02,\n      weights2: newWeights2,\n    } = await teacher.teach(\n      scaled.arraySync(),\n      nu,\n      weights01.arraySync(),\n      weights02.arraySync(),\n      weights2.arraySync(),\n      teachOutput.arraySync(),\n      count\n    )\n\n    setWeights01(tf.tensor(newWeights01))\n    setWeights02(tf.tensor(newWeights02))\n    setWeights2(tf.tensor(newWeights2))\n\n    setTeaching(false)\n    setTeached(true)\n    predict(\n      tf.tensor(newWeights01),\n      tf.tensor(newWeights02),\n      tf.tensor(newWeights2)\n    )\n  }\n\n  const predict = (weights01, weights02, weights2) => {\n    let input = tf.concat([scaled, tf.onesLike(teachOutput)], 1)\n\n    let y6 = straightRun(input, weights01, weights02, weights2)\n\n    let counter = 0\n    let array = teachOutput.arraySync()\n\n    y6.arraySync().forEach((pr, idx) => {\n      let cl = Math.abs(pr - CLASS1) < Math.abs(pr - CLASS2) ? CLASS1 : CLASS2\n      let compared =\n        array[idx][0] > 0.5\n          ? Math.ceil(array[idx][0] * 10) / 10\n          : Math.floor(array[idx][0] * 10) / 10\n\n      if (cl === compared) {\n        counter++\n      }\n    })\n\n    alert(`Точность классификации: ${(counter / teachOutput.shape[0]) * 100}%`)\n  }\n\n  const straightRun = (input, weights01, weights02, weights2) => {\n    //Считаем выходы слоев\n    let net4 = tf.dot(input, weights01)\n    let net5 = tf.dot(input, weights02)\n\n    let y4 = net4.sigmoid()\n    let y5 = net5.sigmoid()\n\n    let hiddenOutput = tf.concat([tf.onesLike(y4), y4, y5], 1)\n\n    let net6 = tf.dot(hiddenOutput, weights2)\n    return net6.sigmoid()\n  }\n\n  const changeAngle = e => {\n    let parsed = parseInt(e)\n    if (isNaN(parsed)) {\n      return\n    }\n    setK(parsed)\n  }\n\n  const changeQty = e => {\n    let parsed = parseInt(e)\n    if (!e || !parsed || parsed < 0) {\n      return\n    }\n    setQty(parsed)\n  }\n\n  const changeB = e => {\n    let parsed = parseInt(e)\n    if (isNaN(parsed)) {\n      return\n    }\n    setB(parsed)\n  }\n\n  const changeSd1 = e => {\n    let parsed = parseFloat(e)\n    if (!e || !parsed || parsed < 0) {\n      return\n    }\n    setSd1(parsed)\n  }\n\n  const changeSd2 = e => {\n    let parsed = parseFloat(e)\n    if (!e || !parsed || parsed < 0) {\n      return\n    }\n    setSd2(parsed)\n  }\n\n  const changeCount = e => {\n    let parsed = parseInt(e)\n    if (!e || !parsed || parsed < 0) {\n      return\n    }\n    setCount(parsed)\n  }\n\n  const changeNu = e => {\n    let parsed = parseFloat(e)\n    if (!e || !parsed || parsed < 0) {\n      return\n    }\n    setNu(parsed)\n  }\n\n  const changeOffset = e => {\n    let parsed = parseInt(e)\n    if (!e || !parsed || parsed <= 0) {\n      return\n    }\n    setOffset(parsed)\n  }\n\n  const resetWeights = () => {\n    setWeights01(tf.randomUniform([3, 1], -1, 1))\n    setWeights02(tf.randomUniform([3, 1], -1, 1))\n    setWeights2(tf.randomUniform([3, 1], -1, 1))\n  }\n\n  const buildFromFile = () => {\n    let reader = new TxtReader()\n\n    reader.sniffLines(file).then(res => {\n      let text = res.result\n      let points = []\n      let output = []\n      let class1 = []\n      let class2 = []\n\n      text.forEach(line => {\n        let arrayLine = line.split('\\t')\n        let x = parseFloat(arrayLine[0].replace(',', '.'))\n        let y = parseFloat(arrayLine[1].replace(',', '.'))\n        if (arrayLine[2]) {\n          let cl = parseFloat(arrayLine[2].replace(',', '.'))\n\n          if (cl === CLASS1) {\n            class1.push({\n              x,\n              y,\n            })\n          } else {\n            class2.push({\n              x,\n              y,\n            })\n          }\n\n          output.push([cl])\n        }\n\n        points.push([x, y])\n      })\n\n      setRandomPoints(tf.tensor(points))\n\n      if (class1.length > 0 && class2.length > 0) {\n        setFirstClass(class1)\n        setSecondClass(class2)\n      } else {\n        let sc = tf.scalar(1).div(tf.tensor(points))\n        let ones = tf.ones([points.length, 1])\n\n        let input = tf.concat([sc, ones], 1)\n\n        input.print()\n\n        let y6 = straightRun(input, weights01, weights02, weights2)\n\n        y6.print()\n\n        y6.arraySync().forEach((result, idx) => {\n          let c =\n            Math.abs(result - CLASS1) < Math.abs(result - CLASS2)\n              ? CLASS1\n              : CLASS2\n\n          if (c === CLASS1) {\n            class1.push({\n              x: points[idx][0],\n              y: points[idx][1],\n            })\n          } else {\n            class2.push({\n              x: points[idx][0],\n              y: points[idx][1],\n            })\n          }\n        })\n\n        setFirstClass(class1)\n        setSecondClass(class2)\n      }\n\n      setTeachOutput(tf.tensor(output))\n    })\n  }\n\n  const createFile = () => {\n    let output = teachOutput.arraySync()\n    let string = ''\n\n    randomPoints.arraySync().forEach((point, idx) => {\n      let floored =\n        output[idx][0] > 0.5\n          ? Math.ceil(output[idx][0] * 10) / 10\n          : Math.floor(output[idx][0] * 10) / 10\n\n      string += `${point[0]}\\t${point[1]}\\t${floored}\\n`\n    })\n\n    let blob = new Blob([string], {\n      type: 'text/plain;charset=utf-8',\n    })\n\n    saveAs(blob, `data${new Date().getTime()}.txt`)\n  }\n\n  return (\n    <Card style={{ marginBottom: 30, padding: 30, border: 'none' }}>\n      <Row>\n        <Col\n          className=\"d-flex flex-row justify-content-end\"\n          style={{ marginTop: 15, userSelect: 'none' }}\n        >\n          <FormGroup className=\"d-flex flex-row no-wrap\" style={{ width: 200 }}>\n            <div\n              style={{ cursor: 'default', marginRight: 10 }}\n              onClick={() => setIsFile(!isFile)}\n            >\n              Генератор\n            </div>\n            <CustomInput\n              type=\"switch\"\n              id=\"fileSwitch\"\n              name=\"fileSwitch\"\n              checked={isFile}\n              label={'Из файла'}\n              onChange={() => setIsFile(!isFile)}\n            />\n          </FormGroup>\n        </Col>\n      </Row>\n      <CardBody className=\"d-flex flex-column align-items-center\">\n        {randomPoints && (\n          <ScatterChart\n            width={500}\n            height={500}\n            margin={{\n              top: 20,\n              right: 20,\n              bottom: 20,\n              left: -30,\n            }}\n          >\n            <CartesianGrid />\n            <XAxis type=\"number\" dataKey=\"x\" />\n            <YAxis type=\"number\" dataKey=\"y\" />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={firstClass} fill=\"#17a2b7\" />\n            <Scatter data={secondClass} fill=\"#dc3546\" />\n            {/* {!isFile && <Scatter data={line} line fill=\"blue\" />} */}\n          </ScatterChart>\n        )}\n      </CardBody>\n      <CardText className=\"d-flex flex-row justify-content-center\">\n        {!isFile && (\n          <Button style={{ marginRight: 15 }} onClick={generate} color=\"info\">\n            Обновить\n          </Button>\n        )}\n        <Button\n          style={{ marginRight: 15 }}\n          disabled={teaching}\n          onClick={fetchWebWorker}\n        >\n          Обучить\n        </Button>\n        {!isFile && (\n          <Button\n            style={{ marginRight: 15 }}\n            color=\"success\"\n            disabled={!teached}\n            onClick={() => predict(weights01, weights02, weights2)}\n          >\n            Предсказать\n          </Button>\n        )}\n        <Button disabled={teaching} onClick={resetWeights}>\n          Сбросить веса\n        </Button>\n      </CardText>\n      <Form style={{ marginBottom: 15 }}>\n        {!isFile && (\n          <Row form className=\"d-flex flex-row justify-content-center\">\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"angle\">Угловой коэф-т</Label>\n                <InputNumber\n                  style={{ width: '100%' }}\n                  value={k}\n                  min={-90}\n                  onChange={changeAngle}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"qty\">Кол-во элементов</Label>\n                <InputNumber\n                  style={{ width: '100%' }}\n                  value={qty}\n                  min={1}\n                  onChange={changeQty}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"sd\">СКО1</Label>\n                <InputNumber\n                  style={{ width: '100%' }}\n                  value={sd1}\n                  min={0.01}\n                  step={0.1}\n                  onChange={changeSd1}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"sd\">СКО2</Label>\n                <InputNumber\n                  style={{ width: '100%' }}\n                  value={sd2}\n                  min={0.01}\n                  step={0.1}\n                  onChange={changeSd2}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"sd\">Смещение от прямой</Label>\n                <InputNumber\n                  style={{ width: '100%' }}\n                  value={offset}\n                  min={1}\n                  step={1}\n                  onChange={changeOffset}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n        )}\n        <Row form className=\"d-flex flex-row justify-content-center\">\n          {!isFile && (\n            <Col md={2}>\n              <FormGroup>\n                <Label for=\"count\">B</Label>\n                <InputNumber\n                  style={{ width: '100%' }}\n                  value={b}\n                  min={0}\n                  onChange={changeB}\n                />\n              </FormGroup>\n            </Col>\n          )}\n          <Col md={2}>\n            <FormGroup>\n              <Label for=\"count\">Кол-во циклов</Label>\n              <InputNumber\n                style={{ width: '100%' }}\n                value={count}\n                min={1}\n                onChange={changeCount}\n              />\n            </FormGroup>\n          </Col>\n          <Col md={2}>\n            <FormGroup>\n              <Label for=\"nu\">Скорость обучения</Label>\n              <InputNumber\n                style={{ width: '100%' }}\n                value={nu}\n                min={0.01}\n                step={0.01}\n                onChange={changeNu}\n              />\n            </FormGroup>\n          </Col>\n          {!isFile && (\n            <Col md={2} className=\"d-flex\">\n              <Button\n                style={{ alignSelf: 'flex-end', marginBottom: '1rem' }}\n                onClick={createFile}\n              >\n                Выгрузить в файл\n              </Button>\n            </Col>\n          )}\n        </Row>\n        {isFile && (\n          <Row form className=\"d-flex flex-row justify-content-center\">\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"exampleCustomFileBrowser\">Значения из файла</Label>\n                <CustomInput\n                  id=\"file\"\n                  type=\"file\"\n                  label=\"Выберете файл...\"\n                  accept=\"text/plain\"\n                  onChange={e => setFile(e.target.files[0])}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={2} className=\"d-flex\">\n              <Button\n                disabled={!file}\n                style={{ alignSelf: 'flex-end', marginBottom: '1rem' }}\n                onClick={buildFromFile}\n              >\n                Построить\n              </Button>\n            </Col>\n          </Row>\n        )}\n      </Form>\n    </Card>\n  )\n}\n\nexport default Generator\n","import React from 'react'\nimport Generator from '../generator/generator'\nimport { Container, Row, Col } from 'reactstrap'\n\nconst App = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Generator />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './components/app'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'rc-input-number/assets/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}